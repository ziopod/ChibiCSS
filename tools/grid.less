/**
* Grid
*
* Variables and mixins for grid usage
*
* @package ChibiCSS
**/

/** Configuration **/
// We assume useragent root font-size take this value
@root: 16px;
@column-width	: unit(96px / @root, rem);
@gutter-width	: unit(24px / @root, rem);

// Narrow breakpoint, mobile landscape
@screen-narrow	: unit((480px / @root), rem);
// Small breakpoint, small tablet portrait
@screen-small	: unit((600px / @root), rem);
// Medium breakpoint, tablet landscape & small screen
@screen-medium	: unit((1024px / @root), rem);
// Large breakpoint, standard screen
@screen-large	: unit((1280px / @root), rem);
// Wide breakpoint, wide screen
@screen-wide	: unit((1400px / @root), rem);
// Huge breakpoint, huge screen
@screen-huge	: unit((1920px / @root), rem);

@debug			: false;
/**
* Grid toolbox
**/

// Fluid wrapper
.wrapper()
{
	width: auto;
	.cf();
}

// Fixe wrapper
.wrapper(@cols)
{
	width: @cols * @column-width;
	margin: 0 auto;
	overflow: hidden;
	clear: both;

	& when(@debug = true)
	{
		.show-wrapper();
	}
}

// Row 
.row()
{
	clear: left;
	padding-left: 0;
	padding-right: 0;
	.nested();
	.cf();

	& when(@debug = true)
	{
		.show-row();
	}
}
.nested()
{
	margin-left: -@gutter-width / 2;
	margin-right: -@gutter-width / 2;
}

// Init box-sizing column
.column-init()
{
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	// For IE6 et 7
	// https://github.com/Schepp/box-sizing-polyfill
	// http://www.paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/
	float: left;
	clear: none;
	padding-left: @gutter-width / 2;
	padding-right: @gutter-width / 2;
	min-height: 1px;
	.column-fluid(1, 1);

	& when(@debug = true)
	{
		.show-column();
	}
}

// Column width in em
.column(@cols)
{
	width: @cols * @column-width;
	// .nested();
}
// Column with pull option
.column(@cols, @position)
{
	.column(@cols);
	.pull(@position);
}
// Fluid column in percent
.column-fluid(@numerator, @denominator)
{
	width: 100 * (@numerator / @denominator) * 1%;
}

// Pull/push
.pull(@cols) // AKA pull-column()
{
	margin-left: @cols * @column-width;
}
.unpull()
{
	margin-left: 0;
}
.push(@cols) // AKA pull-column()
{
	margin-right: @cols * @column-width;
}

// Show/hide
.show(@size)
{
	.show-@{size} {display:block;} // inline ?
}
.hide(@size)
{
 	.hide-@{size}{display:none;}
 }

.show-row()
{
	outline: 1px solid rgba(0, 0, 0, 0.3);	
}
.show-column()
{
	background-color: rgba(0, 0, 0, 0.1);
}
.show-wrapper()
{
	outline: 1px solid rgba(0, 0, 0, 0.3);	
}

// Grid generator
.grid-generator (@index, @prefix) when (@index > 0)
{
	// Column fixe 
	.@{prefix}@{index} {
		.column(@index);
	}	

	.grid-generator(@index - 1, @prefix);
}

.fluid-grid-generator (@numerator, @denominator, @prefix) when (@numerator > 0)
{
	.@{prefix}@{numerator}-@{denominator} {
		.column-fluid(@numerator, @denominator);
	}

	.fluid-grid-generator(@numerator - 1, @denominator, @prefix);
}

/**
* Clearfix
* From http://nicolasgallagher.com/micro-clearfix-hack/
**/
.cf()
{
	*zoom: 1;
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}